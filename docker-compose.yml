services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: smartunderwrite-postgres
    environment:
      POSTGRES_DB: smartunderwrite
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - smartunderwrite-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: smartunderwrite-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - smartunderwrite-network

  # SmartUnderwrite API
  api:
    build:
      context: .
      dockerfile: SmartUnderwrite.Api/Dockerfile
    container_name: smartunderwrite-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=smartunderwrite;Username=postgres;Password=postgres123
      - JwtSettings__SecretKey=your-super-secret-jwt-key-that-is-at-least-32-characters-long
      - JwtSettings__Issuer=SmartUnderwrite
      - JwtSettings__Audience=SmartUnderwrite
      - JwtSettings__ExpiryMinutes=15
      - MinioSettings__Endpoint=minio:9000
      - MinioSettings__AccessKey=minioadmin
      - MinioSettings__SecretKey=minioadmin123
      - MinioSettings__BucketName=smartunderwrite-documents
      - MinioSettings__UseSSL=false
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - smartunderwrite-network

  # SmartUnderwrite Frontend
  frontend:
    build:
      context: SmartUnderwrite.Frontend
      dockerfile: Dockerfile
    container_name: smartunderwrite-frontend
    environment:
      - VITE_API_BASE_URL=http://localhost:8080
    ports:
      - "3000:3000"
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - smartunderwrite-network

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local

networks:
  smartunderwrite-network:
    driver: bridge
