meta {
  name: Create Application - Validation Error
  type: http
  seq: 6
}

post {
  url: {{baseUrl}}/api/applications
  body: json
  auth: bearer
}

auth:bearer {
  token: {{affiliateToken}}
}

body:json {
  {
    "applicant": {
      "firstName": "",
      "lastName": "Doe",
      "ssnHash": "hashed_ssn_123",
      "dateOfBirth": "1990-01-15T00:00:00Z",
      "phone": "invalid-phone",
      "email": "invalid-email",
      "address": {
        "street": "123 Main St",
        "city": "Anytown",
        "state": "CA",
        "zipCode": "12345"
      }
    },
    "productType": "",
    "amount": -1000,
    "incomeMonthly": -500,
    "employmentType": "Full-Time",
    "creditScore": 1000
  }
}

assert {
  res.status: eq 400
  res.body.errors: isDefined
}

tests {
  test("Validation errors are returned for invalid application data", function() {
    expect(res.status).to.equal(400);
    expect(res.body.errors).to.be.an("object");
    
    // Should have validation errors for various fields
    const errors = res.body.errors;
    expect(Object.keys(errors).length).to.be.greaterThan(0);
  });
}